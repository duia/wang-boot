debug=true
#Server
spring.application.name=wang-boot-admin-web
server.port=88
server.tomcat.uri-encoding=UTF-8

#spring.cloud.sentinel.transport.dashboard=localhost:8080
#management.endpoints.web.exposure.include=*

#spring.cloud.sentinel.datasource.ds3.zk.server-addr=localhost:2181
#spring.cloud.sentinel.datasource.ds3.zk.group-id=SENTINEL_GROUP
#spring.cloud.sentinel.datasource.ds3.zk.data-id=wang-boot-admin-web
#spring.cloud.sentinel.datasource.ds3.zk.rule-type=flow
#spring.cloud.sentinel.datasource.ds3.zk.data-type=json

#LOG
logging.config=classpath:logback-spring.xml
logging.path=E:/wpc/logs

#jsp 支持
#spring.mvc.view.suffix=.html
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.static-path-pattern=/static/**
#spring.resources.static-locations=classpath:/resources/static/

#thymelea模板配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
#热部署文件，页面不产生缓存，及时更新
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

##########################  druid配置   ##########################
spring.datasource.druid.url=jdbc:mysql://localhost:3306/wang-boot?useUnicode=true&amp;characterEncoding=UTF-8
spring.datasource.druid.username=root
spring.datasource.druid.password=root

#连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
# 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。removeabandoned不建议在生产环境中打开如果用SQL Server，建议追加配置)
spring.datasource.druid.initial-size=1
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=1
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000 
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements=和上面的等价
spring.datasource.druid.validation-query=SELECT 'x'
#spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#spring.datasource.druid.max-evictable-idle-time-millis=
#配置多个英文逗号分隔
spring.datasource.druid.filters=stat,wall,slf4j

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=account
spring.datasource.druid.web-stat-filter.principal-cookie-name=account
spring.datasource.druid.web-stat-filter.profile-enable=true

# StatViewServlet配置
#展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=128.242.127.1/24,128.242.128.1

# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns=com.wpc.*.service.*

# mybatis
mybatis.type-aliases-package=com.wpc.system.model
mybatis.mapper-locations=classpath*:mapper/*/*Mapper.xml
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.use-generated-keys=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30

# 通用 Mapper 配置
mapper.mappers=com.wpc.base.dao.BaseMapper
mapper.not-empty=false
mapper.identity=MYSQL
# 分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# mongodb1
spring.data.mongodb.one.uri=mongodb://127.0.0.1:27017/wpc
# mongdb2
spring.data.mongodb.two.uri=mongodb://112.126.91.194:27017/tiku_dev

# redis 数据源
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.database=2
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
#################redis线程池设置#################
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.jedis.pool.max-idle=8
#连接池中的最小空闲连接，默认值也是0。
spring.redis.jedis.pool.min-idle=0
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.jedis.pool.max-active=2000
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.jedis.pool.max-wait=3000


spring.rabbitmq.host=rabbitmq1.rabbitmq.test.duia.com
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin123
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=15000
#生产端
#spring.rabbitmq.publisher-confirms=true
#spring.rabbitmq.publisher-returns=true
# return 的时候代表消息不可达，设置 broker 不自动删除该消息，
# 而是返回到生产端，让我们进行一些后续的处理
#spring.rabbitmq.template.mandatory=true
#消费端
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#spring.rabbitmq.listener.simple.concurrency=10
#spring.rabbitmq.listener.simple.max-concurrency=20
#spring.rabbitmq.listener.simple.prefetch=5
spring.rabbitmq.listener.direct.acknowledge-mode=manual

# 全局限流
wpc.rateLimit.enable=true
# 每1秒内
wpc.rateLimit.timeout=1000
# 总限制100个请求
wpc.rateLimit.limit=100